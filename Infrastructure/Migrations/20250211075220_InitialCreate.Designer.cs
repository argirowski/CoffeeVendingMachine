// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250211075220_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CoffeeIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Cinnamon")
                        .HasColumnType("bit");

                    b.Property<bool>("CoconutMilk")
                        .HasColumnType("bit");

                    b.Property<int>("DosesOfMilk")
                        .HasColumnType("int");

                    b.Property<int>("PacksOfSugar")
                        .HasColumnType("int");

                    b.Property<bool>("Stevia")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CoffeeIngredients");

                    b.HasData(
                        new
                        {
                            Id = new Guid("587cdc3e-40a8-43f1-b67e-251292d94f3e"),
                            Cinnamon = false,
                            CoconutMilk = false,
                            DosesOfMilk = 1,
                            PacksOfSugar = 2,
                            Stevia = true
                        },
                        new
                        {
                            Id = new Guid("f0ca2d3e-554f-459e-9045-dce2d5ab616b"),
                            Cinnamon = true,
                            CoconutMilk = true,
                            DosesOfMilk = 0,
                            PacksOfSugar = 1,
                            Stevia = false
                        },
                        new
                        {
                            Id = new Guid("ea3cf94a-7ab6-4347-a0a2-b8f32d2ba51b"),
                            Cinnamon = false,
                            CoconutMilk = true,
                            DosesOfMilk = 2,
                            PacksOfSugar = 0,
                            Stevia = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.CoffeeIngredientType", b =>
                {
                    b.Property<Guid>("CoffeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CoffeeIngredientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CoffeeId", "CoffeeIngredientId");

                    b.HasIndex("CoffeeIngredientId");

                    b.ToTable("CoffeeIngredientTypes");

                    b.HasData(
                        new
                        {
                            CoffeeId = new Guid("49ed75aa-0a08-40c8-92ed-cd88a68f564d"),
                            CoffeeIngredientId = new Guid("587cdc3e-40a8-43f1-b67e-251292d94f3e")
                        },
                        new
                        {
                            CoffeeId = new Guid("5cd91938-abc4-440f-b3c1-52371516bf8d"),
                            CoffeeIngredientId = new Guid("f0ca2d3e-554f-459e-9045-dce2d5ab616b")
                        },
                        new
                        {
                            CoffeeId = new Guid("8f516d6a-e1b3-4d66-b0d7-f9b40cdcdb04"),
                            CoffeeIngredientId = new Guid("ea3cf94a-7ab6-4347-a0a2-b8f32d2ba51b")
                        });
                });

            modelBuilder.Entity("Domain.Entities.CoffeeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoffeeTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("49ed75aa-0a08-40c8-92ed-cd88a68f564d"),
                            Name = "Espresso"
                        },
                        new
                        {
                            Id = new Guid("5cd91938-abc4-440f-b3c1-52371516bf8d"),
                            Name = "Americano"
                        },
                        new
                        {
                            Id = new Guid("8f516d6a-e1b3-4d66-b0d7-f9b40cdcdb04"),
                            Name = "Caffè Crema"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CoffeeIngredientType", b =>
                {
                    b.HasOne("Domain.Entities.CoffeeType", "Coffee")
                        .WithMany("CoffeeIngredients")
                        .HasForeignKey("CoffeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.CoffeeIngredient", "CoffeeIngredient")
                        .WithMany("Coffees")
                        .HasForeignKey("CoffeeIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coffee");

                    b.Navigation("CoffeeIngredient");
                });

            modelBuilder.Entity("Domain.Entities.CoffeeIngredient", b =>
                {
                    b.Navigation("Coffees");
                });

            modelBuilder.Entity("Domain.Entities.CoffeeType", b =>
                {
                    b.Navigation("CoffeeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
